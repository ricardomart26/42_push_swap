Push swap Logica:

Ate 100 numeros:

1º Passo:
Organizar todos os numeros e guardar num array

2º Passo:
Dividir em metade e guardar numa chunk e empurrar para o B a metade mais baixa

3º Passo:
Verificar na A se um dos numeros na chunk e se esta mais perto da pelo final ou pelo inicio (ra ou rra)

4º Passo:
Verificar em que index o numero encontrado mais perto vai ficar 

5º Passo:
Simular 4 numeros do chunk dentro do A, e ver os movimentos para cada opção
Fazer o que tiver menos moves.
1 move -> beg_number 

Ver possiveis erros e como printar o erro.


23	11 
7	5
32	4
0
12
9
98
20

ra_counter: first_number = 1
rra_counter: second_number = 3

rb_counter: first_number = 1
rb_counter: second_number = 1

first_number:
1 rr
1 pb
1 rrb
3 moves

second_number:
3 rra
1 rb
1 pb
1 rrb

3 rra
2 rrb
= 2 rrr e 1 rra : 3 moves

9	5	
98	4
20	11
23
7
32
0
12

pb 
4 moves
	
98	9
20	5
23	4
7	11
32	
0
12

rrb

5 moves

Entao fazemos o primeiro


